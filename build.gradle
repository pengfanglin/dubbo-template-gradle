plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def env = project.hasProperty('env') && project.property("env") == "pro" ? "pro" : "dev"
def jarVersionSuffix = env == "pro" ? "-RELEASE" : "-SNAPSHOT"

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.fanglin.dubbo'
    version '1.0.0'

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
    }

    dependencies {
        annotationProcessor "org.projectlombok:lombok"
        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
        testAnnotationProcessor "org.projectlombok:lombok"
        testAnnotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        testCompileOnly("org.projectlombok:lombok")
        api("org.projectlombok:lombok")
    }
    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
        repositories {
            maven {
                name = 'local'
                version += jarVersionSuffix
            }
        }
    }

    tasks {
        processResources {
            from("src/main/resources")
            into("$buildDir/resources/main")
            include("application-" + env + ".yml","**/*.xml")
            rename("application-" + env + ".yml", "application.yml")
        }
    }
}
